from docx import Document
from docx.shared import Inches
import os

def generate_word_document(fields_dict, output_path, image_path=None):
    """
    Generate a Word document with filled form fields.
    
    Args:
        fields_dict: Dictionary of field names and values
        output_path: Path to save the Word document
        image_path: Optional path to filled form image
    """
    doc = Document()
    
    # Add title
    title = doc.add_heading('Filled Form Document', 0)
    
    # Add filled image if provided
    if image_path and os.path.exists(image_path):
        doc.add_heading('Filled Form Image', level=1)
        
        # Add image with proper sizing
        try:
            paragraph = doc.add_paragraph()
            run = paragraph.add_run()
            
            # Add image with max width of 6 inches
            run.add_picture(image_path, width=Inches(6))
            doc.add_paragraph()  # Add spacing
        except Exception as e:
            doc.add_paragraph(f"Error adding image: {str(e)}")
        
        # Add page break
        doc.add_page_break()
    
    # Add field data section
    doc.add_heading('Form Field Data', level=1)
    
    if fields_dict:
        # Create table for better formatting
        table = doc.add_table(rows=1, cols=2)
        table.style = 'Table Grid'
        
        # Add header row
        hdr_cells = table.rows[0].cells
        hdr_cells[0].text = 'Field Name'
        hdr_cells[1].text = 'Value'
        
        # Make header bold
        for cell in hdr_cells:
            for paragraph in cell.paragraphs:
                for run in paragraph.runs:
                    run.font.bold = True
        
        # Add data rows
        for field_name, field_value in fields_dict.items():
            row_cells = table.add_row().cells
            row_cells[0].text = str(field_name)
            row_cells[1].text = str(field_value) if field_value else "Not filled"
    else:
        doc.add_paragraph("No form fields were filled.")
    
    # Add summary
    doc.add_heading('Summary', level=1)
    doc.add_paragraph(f"Total fields processed: {len(fields_dict)}")
    doc.add_paragraph(f"Fields filled: {sum(1 for v in fields_dict.values() if v)}")
    
    # Add footer
    doc.add_paragraph()
    footer = doc.add_paragraph("Generated by Document Voice Filler")
    
    # Save document
    doc.save(output_path)
    
    return output_path
